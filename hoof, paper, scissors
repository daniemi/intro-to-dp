#include <bits/stdc++.h>
#define int long long
#define pb push_back
#define cl clear()
#define rsz resize
using namespace std;

vector<vector<vector<int>>> dp;
vector<int> game;
int32_t main() {
	int n, k;
	cin >> n >> k;

	char c;
	while(cin >> c) {
		if(c=='H') game.pb(0);
		else if(c=='P') game.pb(1);
		else game.pb(2);
	}
	
	dp.cl; dp.rsz(n, vector<vector<int>> (k+1,vector<int>(3)));
	dp[0][0][game[0]]=1;

	for(int i=0; i<=k; ++i) {
		for(int e=1; e<n; ++e) {
			int win=game[e]+1; win%=3;
			int w0=bool(!win);
			int w1=bool(!(win-1));
			int w2=bool(!(win-2));

			dp[e][i][0] = max(dp[e][i][0], dp[e-1][i][0]+w0);
			dp[e][i][1] = max(dp[e][i][1], dp[e-1][i][1]+w1);
			dp[e][i][2] = max(dp[e][i][2], dp[e-1][i][2]+w2);

			if(i) {
				dp[e][i][0] = max({dp[e][i][0], dp[e-1][i-1][1]+!win, dp[e-1][i-1][2]+w0});
				dp[e][i][1] = max({dp[e][i][1], dp[e-1][i-1][0]+!(win-1), dp[e-1][i-1][2]+w1});
				dp[e][i][2] = max({dp[e][i][2], dp[e-1][i-1][0]+!(win-2), dp[e-1][i-1][1]+w2});
			}
		}
	}

	cout << max({dp[--n][k][0],dp[n][k][1],dp[n][k][2]});

	return 0;
}
